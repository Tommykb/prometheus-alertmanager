// Code generated by protoc-gen-go.
// source: nflog.proto
// DO NOT EDIT!

/*
Package nflogpb is a generated protocol buffer package.

It is generated from these files:
	nflog.proto

It has these top-level messages:
	Receiver
	Entry
	MeshEntry
*/
package nflogpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Receiver struct {
	// Configured name of the receiver group.
	GroupName string `protobuf:"bytes,1,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	// Name of the integration of the receiver.
	Integration string `protobuf:"bytes,2,opt,name=integration" json:"integration,omitempty"`
	// Index of the receiver with respect to the integration.
	// Every integration in a group may have 0..N configurations.
	Idx uint32 `protobuf:"varint,3,opt,name=idx" json:"idx,omitempty"`
}

func (m *Receiver) Reset()                    { *m = Receiver{} }
func (m *Receiver) String() string            { return proto.CompactTextString(m) }
func (*Receiver) ProtoMessage()               {}
func (*Receiver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Receiver) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *Receiver) GetIntegration() string {
	if m != nil {
		return m.Integration
	}
	return ""
}

func (m *Receiver) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

// Entry holds information about a successful notification
// sent to a receiver.
type Entry struct {
	// The key identifying the dispatching group.
	GroupKey []byte `protobuf:"bytes,1,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	// The receiver that was notified.
	Receiver *Receiver `protobuf:"bytes,2,opt,name=receiver" json:"receiver,omitempty"`
	// Hash over the state of the group at notification time.
	GroupHash []byte `protobuf:"bytes,3,opt,name=group_hash,json=groupHash,proto3" json:"group_hash,omitempty"`
	// Whether the notification was about a resolved alert.
	Resolved bool `protobuf:"varint,4,opt,name=resolved" json:"resolved,omitempty"`
	// Timestamp of the succeeding notification.
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Entry) GetGroupKey() []byte {
	if m != nil {
		return m.GroupKey
	}
	return nil
}

func (m *Entry) GetReceiver() *Receiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Entry) GetGroupHash() []byte {
	if m != nil {
		return m.GroupHash
	}
	return nil
}

func (m *Entry) GetResolved() bool {
	if m != nil {
		return m.Resolved
	}
	return false
}

func (m *Entry) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// MeshEntry is a wrapper message to communicate a notify log
// entry through a mesh network.
type MeshEntry struct {
	// The original raw notify log entry.
	Entry *Entry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	// A timestamp indicating when the mesh peer should evict
	// the log entry from its state.
	ExpiresAt *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *MeshEntry) Reset()                    { *m = MeshEntry{} }
func (m *MeshEntry) String() string            { return proto.CompactTextString(m) }
func (*MeshEntry) ProtoMessage()               {}
func (*MeshEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MeshEntry) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *MeshEntry) GetExpiresAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Receiver)(nil), "nflogpb.Receiver")
	proto.RegisterType((*Entry)(nil), "nflogpb.Entry")
	proto.RegisterType((*MeshEntry)(nil), "nflogpb.MeshEntry")
}

func init() { proto.RegisterFile("nflog.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0xd6, 0x6a, 0x32, 0xa9, 0xa2, 0x7b, 0x0a, 0x15, 0x31, 0x14, 0x0f, 0xbd, 0xb8, 0x85,
	0x7a, 0xd1, 0xa3, 0x07, 0x41, 0x10, 0x3d, 0x2c, 0x5e, 0xa5, 0x6c, 0xec, 0x34, 0x59, 0x4c, 0xb2,
	0x61, 0x77, 0x5b, 0x9a, 0x7f, 0xe8, 0xcf, 0x92, 0x4c, 0x3e, 0xea, 0xc9, 0xdb, 0xcc, 0x7b, 0x8f,
	0x37, 0xef, 0x0d, 0x84, 0xe5, 0x26, 0xd7, 0x29, 0xaf, 0x8c, 0x76, 0x9a, 0x9d, 0xd2, 0x52, 0x25,
	0xd3, 0x9b, 0x54, 0xeb, 0x34, 0xc7, 0x05, 0xc1, 0xc9, 0x76, 0xb3, 0x70, 0xaa, 0x40, 0xeb, 0x64,
	0x51, 0xb5, 0xca, 0xd9, 0x27, 0xf8, 0x02, 0xbf, 0x50, 0xed, 0xd0, 0xb0, 0x6b, 0x80, 0xd4, 0xe8,
	0x6d, 0xb5, 0x2a, 0x65, 0x81, 0x91, 0x17, 0x7b, 0xf3, 0x40, 0x04, 0x84, 0xbc, 0xcb, 0x02, 0x59,
	0x0c, 0xa1, 0x2a, 0x1d, 0xa6, 0x46, 0x3a, 0xa5, 0xcb, 0xe8, 0x88, 0xf8, 0xbf, 0x10, 0xbb, 0x80,
	0x91, 0x5a, 0xef, 0xa3, 0x51, 0xec, 0xcd, 0xcf, 0x44, 0x33, 0xce, 0x7e, 0x3c, 0x18, 0x3f, 0x97,
	0xce, 0xd4, 0xec, 0x0a, 0x5a, 0xab, 0xd5, 0x37, 0xd6, 0xe4, 0x3d, 0x11, 0x3e, 0x01, 0xaf, 0x58,
	0xb3, 0x3b, 0xf0, 0x4d, 0x97, 0x82, 0x7c, 0xc3, 0xe5, 0x25, 0xef, 0x2a, 0xf0, 0x3e, 0x9e, 0x18,
	0x24, 0x87, 0xa0, 0x99, 0xb4, 0x19, 0x9d, 0x9b, 0x74, 0x41, 0x5f, 0xa4, 0xcd, 0xd8, 0xb4, 0x71,
	0xb3, 0x3a, 0xdf, 0xe1, 0x3a, 0x3a, 0x8e, 0xbd, 0xb9, 0x2f, 0x86, 0x9d, 0x3d, 0x40, 0x30, 0xbc,
	0x20, 0x1a, 0xd3, 0xa9, 0x29, 0x6f, 0x9f, 0xc4, 0xfb, 0x27, 0xf1, 0x8f, 0x5e, 0x21, 0x0e, 0xe2,
	0x59, 0x0e, 0xc1, 0x1b, 0xda, 0xac, 0x6d, 0x73, 0x0b, 0x63, 0x6c, 0x06, 0x6a, 0x12, 0x2e, 0xcf,
	0x87, 0xb4, 0x44, 0x8b, 0x96, 0x64, 0x8f, 0x00, 0xb8, 0xaf, 0x94, 0x41, 0xbb, 0x92, 0xae, 0x2b,
	0xf6, 0xef, 0xb5, 0x4e, 0xfd, 0xe4, 0x92, 0x13, 0xa2, 0xef, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xf3, 0x47, 0x57, 0xc3, 0xd7, 0x01, 0x00, 0x00,
}
